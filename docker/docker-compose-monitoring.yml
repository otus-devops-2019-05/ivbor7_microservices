version: '3.5'
services:

  node-exporter:
    hostname: node-exporter
    container_name: node-exporter
    image: prom/node-exporter:v0.15.2
    user: root
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($$|/)"'
    networks:
      - ${NETW_FRONT}
      - ${NETW_BACK}

  mongodb_exporter:
    hostname: mongodb_exporter
    container_name: mongodb_exporter
#    build: . 
    image: ${USER_NAME}/mongodb_exporter
    command:
      - '--mongodb.uri=mongodb://post_db:27017'
      - '--groups.enabled=asserts,durability,background_flusshing,connections,extra_info,global_lock,index_counters,network,op_counters,op_counters_repl,memory,locks,metrics'
#     - '--collect.collection'
      - '--collect.database'
    restart: always
    ports:
      - 9216:9216
    networks:
      - ${NETW_BACK}

  blackbox-exporter:
    hostname: blackbox-exporter
    container_name: blackbox-exporter
    image: prom/blackbox-exporter:latest
    volumes:
      - '../monitoring/exporters/blackbox-exporter:/config'
    command:
      - '--config.file=/etc/blackbox_exporter/config.yml'
    ports:  
      - '9115:9115'
    networks:
      backend_net:
        aliases:
          - blackbox_net
      frontend_net:
        aliases:
          - blackbox_net

  alertmanager:
    hostname: alertmanager
    container_name: alertmanager
    image: ${USER_NAME}/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
    ports:
      - '9093:9093'
    networks:
      backend_net:
        aliases:
          - prometheus_net


  prometheus:
    hostname: prometheus
    container_name: prometheus
    image: ${USER_NAME}/prometheus:latest
    ports:
      - '9090:9090'
    volumes:
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=1d'
    networks:
      frontend_net:
        aliases:
          - prometheus_net        
      backend_net:
        aliases:
          - prometheus_net

  cadvisor:
    hostname: cadvisor
    container_name: cadvisor
    image: google/cadvisor:v0.29.0
    volumes:
      - '/:/rootfs:ro'
      - '/var/run:/var/run:rw'
      - '/sys:/sys:ro'
      - '/var/lib/docker/:/var/lib/docker:ro'
    ports:
      - '8080:8080'
    networks:
      frontend_net:
        aliases:
          - prometheus_net
      backend_net:
        aliases:
          - prometheus_net

  telegraf:
    hostname: telegraf
    container_name: telegraf
    image: ${USER_NAME}/telegraf
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    networks:
      backend_net:
        aliases:
          - prometheus_net

  grafana:
    image: grafana/grafana:5.0.0
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=secret
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    networks:
      frontend_net:
        aliases:
          - prometheus_net
      backend_net:
        aliases:
          - prometheus_net

volumes:
  prometheus_data:
  grafana_data:

networks:
  frontend_net:
    name: ${NETW_FRONT}
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: ${SUBNET_FRONT}

  backend_net:
    name: ${NETW_BACK}
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: ${SUBNET_BACK}
